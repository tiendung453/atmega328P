
joystick.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  000002ee  00000382  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800102  00800102  00000384  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000384  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000003f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000abc  00000000  00000000  0000047c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000814  00000000  00000000  00000f38  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000055d  00000000  00000000  0000174c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  00001cac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000452  00000000  00000000  00001e6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000043c  00000000  00000000  000022be  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000026fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__vector_4>
  14:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__vector_5>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ee       	ldi	r30, 0xEE	; 238
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a7 30       	cpi	r26, 0x07	; 7
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 07 01 	call	0x20e	; 0x20e <main>
  9e:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_21>:
				if(direction == 1)mode = 1;
				else if(direction == 2) mode = 2;
			}
			break;
		case 5:
			Set_Motor(0,0);
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	cf 92       	push	r12
  b2:	df 92       	push	r13
  b4:	ef 92       	push	r14
  b6:	ff 92       	push	r15
  b8:	2f 93       	push	r18
  ba:	3f 93       	push	r19
  bc:	4f 93       	push	r20
  be:	5f 93       	push	r21
  c0:	6f 93       	push	r22
  c2:	7f 93       	push	r23
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
  cc:	ef 93       	push	r30
  ce:	ff 93       	push	r31
  d0:	80 e4       	ldi	r24, 0x40	; 64
  d2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
  d6:	8f e9       	ldi	r24, 0x9F	; 159
  d8:	9f e0       	ldi	r25, 0x0F	; 15
  da:	01 97       	sbiw	r24, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <__vector_21+0x34>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <__vector_21+0x3a>
  e0:	00 00       	nop
  e2:	a0 91 78 00 	lds	r26, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  e6:	b0 91 79 00 	lds	r27, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  ea:	c0 90 05 01 	lds	r12, 0x0105	; 0x800105 <minSpeed>
  ee:	d1 2c       	mov	r13, r1
  f0:	e1 2c       	mov	r14, r1
  f2:	f1 2c       	mov	r15, r1
  f4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
  f8:	42 2f       	mov	r20, r18
  fa:	50 e0       	ldi	r21, 0x00	; 0
  fc:	60 e0       	ldi	r22, 0x00	; 0
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	9a 01       	movw	r18, r20
 102:	ab 01       	movw	r20, r22
 104:	2c 19       	sub	r18, r12
 106:	3d 09       	sbc	r19, r13
 108:	4e 09       	sbc	r20, r14
 10a:	5f 09       	sbc	r21, r15
 10c:	0e 94 3c 01 	call	0x278	; 0x278 <__mulshisi3>
 110:	2f ef       	ldi	r18, 0xFF	; 255
 112:	33 e0       	ldi	r19, 0x03	; 3
 114:	40 e0       	ldi	r20, 0x00	; 0
 116:	50 e0       	ldi	r21, 0x00	; 0
 118:	0e 94 12 01 	call	0x224	; 0x224 <__divmodsi4>
 11c:	c2 0e       	add	r12, r18
 11e:	d3 1e       	adc	r13, r19
 120:	e4 1e       	adc	r14, r20
 122:	f5 1e       	adc	r15, r21
 124:	c0 92 06 01 	sts	0x0106, r12	; 0x800106 <speed>
 128:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <speed>
 12c:	87 bd       	out	0x27, r24	; 39
 12e:	ea e7       	ldi	r30, 0x7A	; 122
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	80 64       	ori	r24, 0x40	; 64
 136:	80 83       	st	Z, r24
 138:	ff 91       	pop	r31
 13a:	ef 91       	pop	r30
 13c:	bf 91       	pop	r27
 13e:	af 91       	pop	r26
 140:	9f 91       	pop	r25
 142:	8f 91       	pop	r24
 144:	7f 91       	pop	r23
 146:	6f 91       	pop	r22
 148:	5f 91       	pop	r21
 14a:	4f 91       	pop	r20
 14c:	3f 91       	pop	r19
 14e:	2f 91       	pop	r18
 150:	ff 90       	pop	r15
 152:	ef 90       	pop	r14
 154:	df 90       	pop	r13
 156:	cf 90       	pop	r12
 158:	0f 90       	pop	r0
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	0f 90       	pop	r0
 15e:	1f 90       	pop	r1
 160:	18 95       	reti

00000162 <PWM_Init>:
 162:	56 9a       	sbi	0x0a, 6	; 10
 164:	81 e8       	ldi	r24, 0x81	; 129
 166:	84 bd       	out	0x24, r24	; 36
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	85 bd       	out	0x25, r24	; 37
 16c:	88 ef       	ldi	r24, 0xF8	; 248
 16e:	87 bd       	out	0x27, r24	; 39
 170:	08 95       	ret

00000172 <pcint_init>:
 172:	87 b1       	in	r24, 0x07	; 7
 174:	80 7f       	andi	r24, 0xF0	; 240
 176:	87 b9       	out	0x07, r24	; 7
 178:	8f e0       	ldi	r24, 0x0F	; 15
 17a:	88 b9       	out	0x08, r24	; 8
 17c:	54 98       	cbi	0x0a, 4	; 10
 17e:	5c 9a       	sbi	0x0b, 4	; 11
 180:	e8 e6       	ldi	r30, 0x68	; 104
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	80 81       	ld	r24, Z
 186:	86 60       	ori	r24, 0x06	; 6
 188:	80 83       	st	Z, r24
 18a:	ec e6       	ldi	r30, 0x6C	; 108
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	8f 60       	ori	r24, 0x0F	; 15
 192:	80 83       	st	Z, r24
 194:	ed e6       	ldi	r30, 0x6D	; 109
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	80 61       	ori	r24, 0x10	; 16
 19c:	80 83       	st	Z, r24
 19e:	08 95       	ret

000001a0 <__vector_4>:
 1a0:	1f 92       	push	r1
 1a2:	0f 92       	push	r0
 1a4:	0f b6       	in	r0, 0x3f	; 63
 1a6:	0f 92       	push	r0
 1a8:	11 24       	eor	r1, r1
 1aa:	8f 93       	push	r24
 1ac:	9f 93       	push	r25
 1ae:	30 99       	sbic	0x06, 0	; 6
 1b0:	07 c0       	rjmp	.+14     	; 0x1c0 <__vector_4+0x20>
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <mode>
 1b8:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <running>
 1bc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 1c0:	31 99       	sbic	0x06, 1	; 6
 1c2:	08 c0       	rjmp	.+16     	; 0x1d4 <__vector_4+0x34>
 1c4:	82 e0       	ldi	r24, 0x02	; 2
 1c6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <mode>
 1ca:	91 e0       	ldi	r25, 0x01	; 1
 1cc:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <running>
 1d0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 1d4:	32 99       	sbic	0x06, 2	; 6
 1d6:	03 c0       	rjmp	.+6      	; 0x1de <__vector_4+0x3e>
 1d8:	83 e0       	ldi	r24, 0x03	; 3
 1da:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <mode>
 1de:	9f 91       	pop	r25
 1e0:	8f 91       	pop	r24
 1e2:	0f 90       	pop	r0
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	0f 90       	pop	r0
 1e8:	1f 90       	pop	r1
 1ea:	18 95       	reti

000001ec <__vector_5>:
 1ec:	1f 92       	push	r1
 1ee:	0f 92       	push	r0
 1f0:	0f b6       	in	r0, 0x3f	; 63
 1f2:	0f 92       	push	r0
 1f4:	11 24       	eor	r1, r1
 1f6:	8f 93       	push	r24
 1f8:	4c 99       	sbic	0x09, 4	; 9
 1fa:	03 c0       	rjmp	.+6      	; 0x202 <__vector_5+0x16>
 1fc:	85 e0       	ldi	r24, 0x05	; 5
 1fe:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <mode>
 202:	8f 91       	pop	r24
 204:	0f 90       	pop	r0
 206:	0f be       	out	0x3f, r0	; 63
 208:	0f 90       	pop	r0
 20a:	1f 90       	pop	r1
 20c:	18 95       	reti

0000020e <main>:

int main(void)
{
	
	//ADC_Init();
	pcint_init();
 20e:	0e 94 b9 00 	call	0x172	; 0x172 <pcint_init>
	PWM_Init();
 212:	0e 94 b1 00 	call	0x162	; 0x162 <PWM_Init>
	//ADCSRA |= (1 << ADSC);
	sei();
 216:	78 94       	sei
	DDRD = 0xFF;
 218:	8f ef       	ldi	r24, 0xFF	; 255
 21a:	8a b9       	out	0x0a, r24	; 10
    while (1) 
    {
		PORTD = mode;
 21c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <mode>
 220:	8b b9       	out	0x0b, r24	; 11
    }
 222:	fc cf       	rjmp	.-8      	; 0x21c <main+0xe>

00000224 <__divmodsi4>:
 224:	05 2e       	mov	r0, r21
 226:	97 fb       	bst	r25, 7
 228:	1e f4       	brtc	.+6      	; 0x230 <__divmodsi4+0xc>
 22a:	00 94       	com	r0
 22c:	0e 94 29 01 	call	0x252	; 0x252 <__negsi2>
 230:	57 fd       	sbrc	r21, 7
 232:	07 d0       	rcall	.+14     	; 0x242 <__divmodsi4_neg2>
 234:	0e 94 44 01 	call	0x288	; 0x288 <__udivmodsi4>
 238:	07 fc       	sbrc	r0, 7
 23a:	03 d0       	rcall	.+6      	; 0x242 <__divmodsi4_neg2>
 23c:	4e f4       	brtc	.+18     	; 0x250 <__divmodsi4_exit>
 23e:	0c 94 29 01 	jmp	0x252	; 0x252 <__negsi2>

00000242 <__divmodsi4_neg2>:
 242:	50 95       	com	r21
 244:	40 95       	com	r20
 246:	30 95       	com	r19
 248:	21 95       	neg	r18
 24a:	3f 4f       	sbci	r19, 0xFF	; 255
 24c:	4f 4f       	sbci	r20, 0xFF	; 255
 24e:	5f 4f       	sbci	r21, 0xFF	; 255

00000250 <__divmodsi4_exit>:
 250:	08 95       	ret

00000252 <__negsi2>:
 252:	90 95       	com	r25
 254:	80 95       	com	r24
 256:	70 95       	com	r23
 258:	61 95       	neg	r22
 25a:	7f 4f       	sbci	r23, 0xFF	; 255
 25c:	8f 4f       	sbci	r24, 0xFF	; 255
 25e:	9f 4f       	sbci	r25, 0xFF	; 255
 260:	08 95       	ret

00000262 <__muluhisi3>:
 262:	0e 94 66 01 	call	0x2cc	; 0x2cc <__umulhisi3>
 266:	a5 9f       	mul	r26, r21
 268:	90 0d       	add	r25, r0
 26a:	b4 9f       	mul	r27, r20
 26c:	90 0d       	add	r25, r0
 26e:	a4 9f       	mul	r26, r20
 270:	80 0d       	add	r24, r0
 272:	91 1d       	adc	r25, r1
 274:	11 24       	eor	r1, r1
 276:	08 95       	ret

00000278 <__mulshisi3>:
 278:	b7 ff       	sbrs	r27, 7
 27a:	0c 94 31 01 	jmp	0x262	; 0x262 <__muluhisi3>

0000027e <__mulohisi3>:
 27e:	0e 94 31 01 	call	0x262	; 0x262 <__muluhisi3>
 282:	82 1b       	sub	r24, r18
 284:	93 0b       	sbc	r25, r19
 286:	08 95       	ret

00000288 <__udivmodsi4>:
 288:	a1 e2       	ldi	r26, 0x21	; 33
 28a:	1a 2e       	mov	r1, r26
 28c:	aa 1b       	sub	r26, r26
 28e:	bb 1b       	sub	r27, r27
 290:	fd 01       	movw	r30, r26
 292:	0d c0       	rjmp	.+26     	; 0x2ae <__udivmodsi4_ep>

00000294 <__udivmodsi4_loop>:
 294:	aa 1f       	adc	r26, r26
 296:	bb 1f       	adc	r27, r27
 298:	ee 1f       	adc	r30, r30
 29a:	ff 1f       	adc	r31, r31
 29c:	a2 17       	cp	r26, r18
 29e:	b3 07       	cpc	r27, r19
 2a0:	e4 07       	cpc	r30, r20
 2a2:	f5 07       	cpc	r31, r21
 2a4:	20 f0       	brcs	.+8      	; 0x2ae <__udivmodsi4_ep>
 2a6:	a2 1b       	sub	r26, r18
 2a8:	b3 0b       	sbc	r27, r19
 2aa:	e4 0b       	sbc	r30, r20
 2ac:	f5 0b       	sbc	r31, r21

000002ae <__udivmodsi4_ep>:
 2ae:	66 1f       	adc	r22, r22
 2b0:	77 1f       	adc	r23, r23
 2b2:	88 1f       	adc	r24, r24
 2b4:	99 1f       	adc	r25, r25
 2b6:	1a 94       	dec	r1
 2b8:	69 f7       	brne	.-38     	; 0x294 <__udivmodsi4_loop>
 2ba:	60 95       	com	r22
 2bc:	70 95       	com	r23
 2be:	80 95       	com	r24
 2c0:	90 95       	com	r25
 2c2:	9b 01       	movw	r18, r22
 2c4:	ac 01       	movw	r20, r24
 2c6:	bd 01       	movw	r22, r26
 2c8:	cf 01       	movw	r24, r30
 2ca:	08 95       	ret

000002cc <__umulhisi3>:
 2cc:	a2 9f       	mul	r26, r18
 2ce:	b0 01       	movw	r22, r0
 2d0:	b3 9f       	mul	r27, r19
 2d2:	c0 01       	movw	r24, r0
 2d4:	a3 9f       	mul	r26, r19
 2d6:	70 0d       	add	r23, r0
 2d8:	81 1d       	adc	r24, r1
 2da:	11 24       	eor	r1, r1
 2dc:	91 1d       	adc	r25, r1
 2de:	b2 9f       	mul	r27, r18
 2e0:	70 0d       	add	r23, r0
 2e2:	81 1d       	adc	r24, r1
 2e4:	11 24       	eor	r1, r1
 2e6:	91 1d       	adc	r25, r1
 2e8:	08 95       	ret

000002ea <_exit>:
 2ea:	f8 94       	cli

000002ec <__stop_program>:
 2ec:	ff cf       	rjmp	.-2      	; 0x2ec <__stop_program>
