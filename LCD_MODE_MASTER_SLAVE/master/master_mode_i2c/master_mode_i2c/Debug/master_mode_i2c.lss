
master_mode_i2c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000017e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000012a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000017e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000089d  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006fd  00000000  00000000  00000ae5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000355  00000000  00000000  000011e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000094  00000000  00000000  00001538  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b6  00000000  00000000  000015cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000012c  00000000  00000000  00001982  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001aae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 66 00 	call	0xcc	; 0xcc <main>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <i2c_start>:
}

void i2c_showError(unsigned char er)
{
	DDRB = 0xFF;
	PORTB = er;
  80:	84 ea       	ldi	r24, 0xA4	; 164
  82:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  86:	ec eb       	ldi	r30, 0xBC	; 188
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	88 23       	and	r24, r24
  8e:	ec f7       	brge	.-6      	; 0x8a <i2c_start+0xa>
  90:	08 95       	ret

00000092 <i2c_stop>:
  92:	84 e9       	ldi	r24, 0x94	; 148
  94:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  98:	ec eb       	ldi	r30, 0xBC	; 188
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	80 81       	ld	r24, Z
  9e:	88 23       	and	r24, r24
  a0:	ec f7       	brge	.-6      	; 0x9c <i2c_stop+0xa>
  a2:	08 95       	ret

000000a4 <i2c_master_trasmit>:
  a4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  a8:	84 e8       	ldi	r24, 0x84	; 132
  aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  ae:	ec eb       	ldi	r30, 0xBC	; 188
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	80 81       	ld	r24, Z
  b4:	88 23       	and	r24, r24
  b6:	ec f7       	brge	.-6      	; 0xb2 <i2c_master_trasmit+0xe>
  b8:	08 95       	ret

000000ba <i2c_master_init>:
  ba:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  be:	87 e4       	ldi	r24, 0x47	; 71
  c0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
  c4:	84 e0       	ldi	r24, 0x04	; 4
  c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  ca:	08 95       	ret

000000cc <main>:
}


int main(void)
{
	DDRB = 0xFF;
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	84 b9       	out	0x04, r24	; 4
	unsigned char s;
    i2c_master_init();
  d0:	0e 94 5d 00 	call	0xba	; 0xba <i2c_master_init>
	i2c_start();
  d4:	0e 94 40 00 	call	0x80	; 0x80 <i2c_start>
}

unsigned char i2c_read_status(void)
{
	unsigned char i = 0;
	i = TWSR & 0xF8;
  d8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  dc:	88 7f       	andi	r24, 0xF8	; 248
	DDRB = 0xFF;
	unsigned char s;
    i2c_master_init();
	i2c_start();
	s = i2c_read_status();
	if(s != 0x08)
  de:	88 30       	cpi	r24, 0x08	; 8
  e0:	21 f0       	breq	.+8      	; 0xea <main+0x1e>
	return TWDR;
}

void i2c_showError(unsigned char er)
{
	DDRB = 0xFF;
  e2:	9f ef       	ldi	r25, 0xFF	; 255
  e4:	94 b9       	out	0x04, r25	; 4
	PORTB = er;
  e6:	85 b9       	out	0x05, r24	; 5
  e8:	1b c0       	rjmp	.+54     	; 0x120 <main+0x54>
	if(s != 0x08)
	{
		i2c_showError(s);
		return 0;
	}
	i2c_master_trasmit(0b00000010);
  ea:	82 e0       	ldi	r24, 0x02	; 2
  ec:	0e 94 52 00 	call	0xa4	; 0xa4 <i2c_master_trasmit>
}

unsigned char i2c_read_status(void)
{
	unsigned char i = 0;
	i = TWSR & 0xF8;
  f0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  f4:	88 7f       	andi	r24, 0xF8	; 248
		i2c_showError(s);
		return 0;
	}
	i2c_master_trasmit(0b00000010);
	s = i2c_read_status();
	if(s != 0x18)
  f6:	88 31       	cpi	r24, 0x18	; 24
  f8:	21 f0       	breq	.+8      	; 0x102 <main+0x36>
	return TWDR;
}

void i2c_showError(unsigned char er)
{
	DDRB = 0xFF;
  fa:	9f ef       	ldi	r25, 0xFF	; 255
  fc:	94 b9       	out	0x04, r25	; 4
	PORTB = er;
  fe:	85 b9       	out	0x05, r24	; 5
 100:	0f c0       	rjmp	.+30     	; 0x120 <main+0x54>
	if(s != 0x18)
	{
		i2c_showError(s);
		return 0;
	}
	i2c_master_trasmit(0b11111000);
 102:	88 ef       	ldi	r24, 0xF8	; 248
 104:	0e 94 52 00 	call	0xa4	; 0xa4 <i2c_master_trasmit>
}

unsigned char i2c_read_status(void)
{
	unsigned char i = 0;
	i = TWSR & 0xF8;
 108:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 10c:	88 7f       	andi	r24, 0xF8	; 248
		i2c_showError(s);
		return 0;
	}
	i2c_master_trasmit(0b11111000);
	s = i2c_read_status();
	if(s != 0x28)
 10e:	88 32       	cpi	r24, 0x28	; 40
 110:	21 f0       	breq	.+8      	; 0x11a <main+0x4e>
	return TWDR;
}

void i2c_showError(unsigned char er)
{
	DDRB = 0xFF;
 112:	9f ef       	ldi	r25, 0xFF	; 255
 114:	94 b9       	out	0x04, r25	; 4
	PORTB = er;
 116:	85 b9       	out	0x05, r24	; 5
 118:	03 c0       	rjmp	.+6      	; 0x120 <main+0x54>
	if(s != 0x28)
	{
		i2c_showError(s);
		return 0;
	}
	i2c_stop();
 11a:	0e 94 49 00 	call	0x92	; 0x92 <i2c_stop>
	
    while (1);
 11e:	ff cf       	rjmp	.-2      	; 0x11e <main+0x52>
	return 0;
}
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	08 95       	ret

00000126 <_exit>:
 126:	f8 94       	cli

00000128 <__stop_program>:
 128:	ff cf       	rjmp	.-2      	; 0x128 <__stop_program>
